---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Demo: Create an Amazon Ec2 Instance.

Parameters:
# Control and adapt the parameters
# Not all info is included in parameters! Double check all!

  KeyName:
    Description: Select SSH Key.
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: MyLoginKey

  Image:
    Description: Image Amazon Linux 2.
    Type: 'AWS::EC2::Image::Id'
    Default: ami-030dbca661d402413

  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro

  VPCid:
    Description: My VpcId.
    Type: 'AWS::EC2::VPC::Id'
    Default: vpc-7fc1fb19

  Subnet1:
    Description: eu-west-1a.
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-8ce8afc4

  Subnet2:
    Description: eu-west-1b.
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-e559e8bf

  Subnet3:
    Description: eu-west-1c.
    Type: 'AWS::EC2::Subnet::Id'
    Default: subnet-b77f08d1

Resources:

  # Create your own LaunchTemplate with nginx Amazon Linux 2
  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData:
        ImageId: !Sub ${Image} # Get info from parameters
        InstanceType: !Sub ${InstanceType}
        KeyName: !Sub ${KeyName}
        SecurityGroupIds:
          - !GetAtt WebSecuritygroup.GroupId # Get groupid from groupname through command: !GetAtt
          - !GetAtt SSHSecuritygroup.GroupId
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            amazon-linux-extras install nginx1.12 -y
            systemctl start nginx
            systemctl enable nginx
            sed -i -e "0,/nginx/s/nginx/MyNameIsAnsofy/" /usr/share/nginx/html/index.html
      LaunchTemplateName: NginxLT

  # My auto-scaling group
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: MyASG
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate # Refers and uses LaunchTemplate 
        Version: 1
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 3
      Tags: 
        - 
          ResourceType: "auto-scaling-group"
          Key: "Name"
          Value: "MyASG-Nginx"
          PropagateAtLaunch: true
          ResourceId: "MyASG"
      TargetGroupARNs: 
        - !Ref TargetGroup
      VPCZoneIdentifier: 
        - !Sub ${Subnet1}
        - !Sub ${Subnet2}
        - !Sub ${Subnet3}

  # ALB
  AppLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "MyLB"
      Scheme: "internet-facing"
      SecurityGroups: 
        - !GetAtt WebSecuritygroup.GroupId
      Subnets: 
        - !Sub ${Subnet1}
        - !Sub ${Subnet2}
        - !Sub ${Subnet3}
      Tags: []
      IpAddressType: "ipv4"
      Type: "application"
  
  # Listener
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: TargetGroup
      LoadBalancerArn:
        Ref: AppLoadBalancer
      Port: '80' # Listens to port 80
      Protocol: HTTP

  # Create a Target Group
  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: "/"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher: 
        HttpCode: "200"
      Name: "MyTG"
      Port: 80
      Protocol: "HTTP"
      TargetType: "instance"
      UnhealthyThresholdCount: 2
      VpcId: !Sub ${VPCid}


  # SecurityGroup    
  WebSecuritygroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: MyWebSecGroup
      GroupName: MyWebSecGroup
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0

  # SecurityGroup    
  SSHSecuritygroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: MySSHSecGroup
      GroupName: MySSHSecGroup
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
  
  
